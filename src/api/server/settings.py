"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 3.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import json
import os.path
import sys

from kombu.serialization import register

from tgen.common.logging.logger_manager import logger
from tgen.common.util.json_util import NpEncoder
from .paths import load_paths

load_paths()

from pathlib import Path

from dotenv import load_dotenv

load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-*@=lz%&bco*9i4sjo_2kp5eb$yp%j#xdn@5!a6*v2v1b(-rahg'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'drf_yasg'
]

MIDDLEWARE = [
    # CORS
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    # Default
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'api.server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'api.server.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

APPEND_SLASH = True
CSRF_COOKIE_SECURE = False
CORS_ALLOWED_ORIGINS = [
    'https://localhost:3000',
    "https://bend.safa.ai",
    "https://dev.bend.safa.ai"
]

ENV_NAME = os.environ.get("ENV_MODE", "development")
logger.info(f"Environment: {ENV_NAME}")
"""
Celery Configuration Options
"""
CELERY_RESULT_BACKEND = 'celery_s3.backends.S3Backend'
CELERY_TIMEZONE = "America/New_York"
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 1440 * 60  # 1 Day
CELERYD_HIJACK_ROOT_LOGGER = False

run_as_eager = ENV_NAME.lower() == "local"
CELERY_TASK_ALWAYS_EAGER = run_as_eager
CELERY_EAGER_PROPAGATES_EXCEPTIONS = run_as_eager
if run_as_eager:
    logger.info("Running in EAGER mode.")


# Encoder function
def np_encoder_dumps(obj):
    return json.dumps(obj, cls=NpEncoder)


# Decoder function
def np_encoder_loads(obj):
    return json.loads(obj)


register('NpEncoder', np_encoder_dumps, np_encoder_loads,
         content_type='application/x-myjson',
         content_encoding='utf-8')

# Tell celery to use your new serializer:
CELERY_ACCEPT_CONTENT = ['NpEncoder']
CELERY_TASK_SERIALIZER = 'NpEncoder'
CELERY_RESULT_SERIALIZER = 'NpEncoder'

if os.environ.get("BACKEND_ACCESS_ID", None):
    CELERY_S3_BACKEND_SETTINGS = {
        'aws_access_key_id': f'{os.environ["BACKEND_ACCESS_ID"]}',
        'aws_secret_access_key': f'{os.environ["BACKEND_SECRET_KEY"]}',
        'bucket': f'{os.environ["BACKEND_BUCKET_NAME"]}'
    }
