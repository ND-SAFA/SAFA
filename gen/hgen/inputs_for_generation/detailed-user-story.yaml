description:
- A Detailed user story is a software development artifact that provides a comprehensive
  and in-depth description of a specific feature or functionality from the perspective
  of an end-user. It goes beyond a simple user story by including more context, details,
  and acceptance criteria. This artifact is different from other similar software
  artifacts, such as use cases or requirements, as it focuses on the user's experience
  and goals, rather than just the technical aspects of the system.
example:
- '

  Title: User Registration


  As a new user,

  I want to register for an account on the website,

  So that I can access the members-only content and features.


  Acceptance Criteria:

  1. The user should be able to access the registration page from the homepage.

  2. The registration form should include fields for the user''s name, email address,
  and password.

  3. The user should be able to submit the registration form after filling in the
  required information.

  4. Upon successful registration, the user should receive a confirmation email with
  a link to verify their account.

  5. After verifying their account, the user should be able to log in using their
  email address and password.

  6. If the user enters incorrect or incomplete information, they should receive an
  error message with guidance on how to correct the issue.

  '
format:
- 'As a [type of user], I want to [perform an action or achieve a goal], So that [reason
  or benefit].  Acceptance Criteria: 1. [Criterion 1] 2. [Criterion 2] 3. [Criterion
  3] ...'
questions:
- - What are the main classes/files in the codebase and what is their purpose?
  - Is there a clear separation of concerns (e.g. model, view, controller)?
  - What are the key functions/methods and what do they do?
  - Is there any persistence/database code and what entities are stored?
  - Are there any external services/APIs being called?
  - Is there any user interface code and what can users do?
  - Is there any authentication/authorization code?
  - Are there any configuration files and what can be configured?
  - Are there any logging or instrumentation hooks and what events are tracked?
  - What are the main control flows through the system (happy paths, error handling,
    etc.)?
