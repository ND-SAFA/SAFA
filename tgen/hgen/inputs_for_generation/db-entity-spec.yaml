description:
- A DB Entity Spec, or Database Entity Specification, in a software development project
  is a detailed description of the data entities that are part of a database system.
  It outlines the attributes, relationships, and constraints of each entity. This
  artifact is different from others as it specifically focuses on the data layer of
  the software, providing a clear understanding of how data is structured, stored,
  and related. It serves as a blueprint for database design and implementation, and
  is crucial for ensuring data integrity and consistency.
example:
- '

  Entity Name: Customer


  Attributes:

  - CustomerID: Unique identifier for each customer (Primary Key)

  - FirstName: First name of the customer (String, Not Null)

  - LastName: Last name of the customer (String, Not Null)

  - Email: Email address of the customer (String, Unique, Not Null)

  - PhoneNumber: Contact number of the customer (String, Not Null)


  Relationships:

  - One-to-Many relationship with Orders: A customer can place multiple orders, but
  each order is associated with one customer.


  Constraints:

  - Email must be unique: No two customers can have the same email address.

  - CustomerID, FirstName, LastName, Email, and PhoneNumber cannot be null: These
  are mandatory fields for each customer record.

  '
format:
- 'Entity Name: [Entity Name]


  Attributes:

  - [Attribute Name]: [Description of the attribute including data type and constraints]


  Relationships:

  - [Description of the relationship with other entities]


  Constraints:

  - [Description of any additional constraints or rules that apply to the entity]'
questions:
- - What are the main classes or data structures representing entities in the code?
  - What are the properties or fields of those classes that would map to attributes
    in a database table?
  - What are the primary keys that uniquely identify each instance of those classes?
  - What are the relationships between the different classes based on references,
    foreign keys, etc?
  - Are there any inheritance hierarchies between classes that would inform a database
    schema?
  - What are the data types of each property or field in the classes?
  - Are there any validation rules, constraints, or restrictions on the values of
    certain properties?
  - Are there any indexes defined on certain properties for performance reasons?
  - Are there any timestamps or metadata properties like created/updated dates?
  - Are there any properties that contain large amounts of text or binary data?
