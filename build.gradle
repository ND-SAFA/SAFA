buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'nebula.lint' version '17.0.0'
    id 'eclipse'
    id 'idea'
    id 'checkstyle'
    id 'jacoco'
}

bootJar {
    archivesBaseName = 'edu.nd.crc.safa'
    archiveVersion = '0.1.0'
}

sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    // data parsing
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.4'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.4'
    implementation 'com.jsoniter:jsoniter:0.9.23'
    implementation 'org.javatuples:javatuples:1.2'
    implementation 'org.eclipse.jgit:org.eclipse.jgit:5.5.1.201910021850-r'

    //database
    implementation 'mysql:mysql-connector-java:8.0.15'
    implementation 'com.google.cloud.sql:mysql-socket-factory-connector-j-8:1.3.1'
    implementation 'org.apache.commons:commons-dbcp2:2.8.0'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'org.neo4j.driver:neo4j-java-driver:4.3.3'
    //implementation 'org.slf4j:slf4j-simple:1.7.32'
    implementation 'org.hibernate:hibernate-core:5.4.32.Final'


    //Spring
    implementation 'org.springframework:spring-jdbc:5.3.9'
    implementation 'org.springframework:spring-beans:5.3.9'
    implementation 'org.springframework:spring-context:5.3.9'
    implementation 'org.springframework.boot:spring-boot-autoconfigure:2.5.3'
    implementation 'org.springframework:spring-webmvc:5.3.9'
    implementation 'org.springframework:spring-orm:5.3.9'
    implementation 'org.springframework.boot:spring-boot:2.5.3'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.5.3'
    implementation 'com.github.v-ladynev:fluent-hibernate-core:0.3.1'

    //implementation 'org.springframework:spring-web:5.3.9'
    // implementation 'org.springframework:spring-tx:5.1.8.RELEASE'
    //implementation 'org.neo4j.driver:neo4j-java-driver-spring-boot-starter:4.2.7.0'


    testImplementation 'com.h2database:h2:1.4.200'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.0-M1'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude module: 'logback-classic'
    }
}


test {
    def envFileName = ''
    if (file('test.env').exists()) {
        envFileName = 'test.env'
    } else if (file('.env').exists()) {
        envFileName = '.env'
    }

    file(envFileName).readLines().each() {
        def (key, value) = it.tokenize('=')
        environment key, value
    }
    testLogging {
        outputs.upToDateWhen { false }
        showStandardStreams = true
    }
    useJUnitPlatform()
    finalizedBy jacocoTestCoverageVerification
}


/*
 * CI/CD
 */
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0
            }
        }
    }
}

checkstyle {
    toolVersion = '8.11'
    configFile = file('checkstyle.xml')
}

checkstyleMain {
    source = 'src/main/java'
}

checkstyleTest {
    source = 'src/test/'
}

