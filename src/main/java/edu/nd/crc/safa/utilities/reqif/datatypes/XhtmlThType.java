//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0.1 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.02.27 at 06:07:33 PM UTC 
//

package edu.nd.crc.safa.utilities.reqif.datatypes;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlIDREF;
import javax.xml.bind.annotation.XmlMixed;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import lombok.AccessLevel;
import lombok.Getter;
import lombok.Setter;

/**
 * Java class for xhtml.th.type complex type.
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "xhtml.th.type", propOrder = {
    "content"
})
@Getter
@Setter
public class XhtmlThType extends XhtmlBasicStyleableType {

    @XmlElementRefs({
        @XmlElementRef(type = XhtmlH1Type.class, required = false),
        @XmlElementRef(type = XhtmlH2Type.class, required = false),
        @XmlElementRef(type = XhtmlH3Type.class, required = false),
        @XmlElementRef(type = XhtmlH4Type.class, required = false),
        @XmlElementRef(type = XhtmlH5Type.class, required = false),
        @XmlElementRef(type = XhtmlH6Type.class, required = false),
        @XmlElementRef(type = XhtmlUlType.class, required = false),
        @XmlElementRef(type = XhtmlOlType.class, required = false),
        @XmlElementRef(type = XhtmlDlType.class, required = false),
        @XmlElementRef(type = XhtmlPType.class, required = false),
        @XmlElementRef(type = XhtmlDivType.class, required = false),
        @XmlElementRef(type = XhtmlPreType.class, required = false),
        @XmlElementRef(type = XhtmlBlockquoteType.class, required = false),
        @XmlElementRef(type = XhtmlAddressType.class, required = false),
        @XmlElementRef(type = XhtmlHrType.class, required = false),
        @XmlElementRef(type = XhtmlTableType.class, required = false),
        @XmlElementRef(type = XhtmlBrType.class, required = false),
        @XmlElementRef(type = XhtmlSpanType.class, required = false),
        @XmlElementRef(type = XhtmlEmType.class, required = false),
        @XmlElementRef(type = XhtmlStrongType.class, required = false),
        @XmlElementRef(type = XhtmlDfnType.class, required = false),
        @XmlElementRef(type = XhtmlCodeType.class, required = false),
        @XmlElementRef(type = XhtmlSampType.class, required = false),
        @XmlElementRef(type = XhtmlKbdType.class, required = false),
        @XmlElementRef(type = XhtmlVarType.class, required = false),
        @XmlElementRef(type = XhtmlCiteType.class, required = false),
        @XmlElementRef(type = XhtmlAbbrType.class, required = false),
        @XmlElementRef(type = XhtmlAcronymType.class, required = false),
        @XmlElementRef(type = XhtmlQType.class, required = false),
        @XmlElementRef(type = XhtmlTtType.class, required = false),
        @XmlElementRef(type = XhtmlIType.class, required = false),
        @XmlElementRef(type = XhtmlBType.class, required = false),
        @XmlElementRef(type = XhtmlBigType.class, required = false),
        @XmlElementRef(type = XhtmlSmallType.class, required = false),
        @XmlElementRef(type = XhtmlSubType.class, required = false),
        @XmlElementRef(type = XhtmlSupType.class, required = false),
        @XmlElementRef(type = XhtmlAType.class, required = false),
        @XmlElementRef(type = XhtmlObjectType.class, required = false),
        @XmlElementRef(type = XhtmlInsType.class, required = false),
        @XmlElementRef(type = XhtmlDelType.class, required = false)
    })
    @XmlMixed
    @Setter(AccessLevel.NONE)
    protected List<XhtmlBasicType> content = new ArrayList<>();

    @XmlAttribute(name = "abbr")
    protected String abbr;

    @XmlAttribute(name = "axis")
    protected String axis;

    @XmlAttribute(name = "headers")
    @XmlIDREF
    @XmlSchemaType(name = "IDREFS")
    @Setter(AccessLevel.NONE)
    protected List<Object> headers = new ArrayList<>();

    @XmlAttribute(name = "rowspan")
    protected BigInteger rowspan = BigInteger.ONE;

    @XmlAttribute(name = "colspan")
    protected BigInteger colspan = BigInteger.ONE;

    @XmlAttribute(name = "align")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String align;

    @XmlAttribute(name = "char")
    protected String alignChar;

    @XmlAttribute(name = "charoff")
    protected String charoff;

    @XmlAttribute(name = "scope")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String scope;

    @XmlAttribute(name = "valign")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String valign;

}
